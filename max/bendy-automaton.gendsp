{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 7,
			"minor" : 0,
			"revision" : 3,
			"architecture" : "x86",
			"modernui" : 1
		}
,
		"rect" : [ 42.0, 84.0, 803.0, 642.0 ],
		"editing_bgcolor" : [ 0.9, 0.9, 0.9, 1.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 761.0, 3.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 5"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 579.75, 3.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 4"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-3",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 387.5, 3.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-8",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 754.0, 616.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "\r\nsquash(fn, val){\r\n\tif(fn<=0){\r\n\t\treturn clip(val, -1, 1);\r\n\t}else if(fn<=1){\r\n\t\treturn wrap(val, -1, 1);\r\n\t}else if(fn<=2){\r\n\t\treturn tanh(val);\r\n\t}else if(fn<=3){\r\n\t\treturn sin(.5*pi*val);\r\n\t}else if(fn<=4){\r\n\t\treturn sin(exp(-val)-1);\r\n\t}else if(fn<=5){\r\n\t\treturn sin(exp(val)-1);\r\n\t}else{\r\n\t\treturn val/(val*val+.25);\r\n\t}\r\n}\r\n\r\n\r\nParam oversample(1, min=1);\r\nParam squash_fn(0), warp(0), switch(0, min=0, max=1), fb(1), samps(512);\r\nBuffer buf_l(\"bendy-l\"), buf_r(\"bendy-r\");\r\nHistory wave_phase_l(0), wave_phase_r(0), update_samp(0);\r\nHistory rotation(0);\r\n\r\nfreq_l = clip(in1, -20000, 20000);\r\nfreq_r = clip(in2, -20000, 20000);\r\nrate = max(0, in3);\r\nbias_l = in4;\r\nbias_r = in5;\r\n\r\nnew_update_samp = wrap(update_samp+1, 0, samps);\r\n\r\n//barrel shift the active, newer and older wavetables\r\nif(new_update_samp < update_samp)\r\n\trotation = wrap(rotation+1,0,3);\r\nupdate_samp = new_update_samp;\r\n\r\nupdate_chan, newer_chan, older_chan = 0,1,2; \r\nif(rotation==1) update_chan, newer_chan, older_chan = 2,0,1;\r\nelse if(rotation==2) update_chan, newer_chan, older_chan = 1,2,0;\r\n\r\n//update automaton\r\nlast_l = peek(buf_l, update_samp, newer_chan, boundmode=\"wrap\");\r\nlast_r = peek(buf_r, update_samp, newer_chan, boundmode=\"wrap\");\r\n\r\ndisp = warp*exp(-last_l*last_r);\r\nwarp_l = peek(buf_l, update_samp+disp, newer_chan, boundmode=\"wrap\", interp = \"linear\");\r\nwarp_r = peek(buf_r, update_samp+disp, newer_chan, boundmode=\"wrap\", interp = \"linear\");\r\nprev_l = peek(buf_l, update_samp+disp-1, newer_chan, boundmode=\"wrap\", interp = \"linear\");\r\nprev_r = peek(buf_r, update_samp+disp-1, newer_chan, boundmode=\"wrap\", interp = \"linear\");\r\nnext_l = peek(buf_l, update_samp+disp+1, newer_chan, boundmode=\"wrap\", interp = \"linear\");\r\nnext_r = peek(buf_r, update_samp+disp+1, newer_chan, boundmode=\"wrap\", interp = \"linear\");\r\n\r\nnew_l, new_r = bias_l+fb*(next_l+warp_l+prev_l)/3, bias_r+fb*(next_r+warp_r+prev_r)/3;\r\n\r\ntemp = new_r;\r\nnew_r = mix(new_r, new_l, switch);\r\nnew_l = mix(new_l, temp, switch);\r\n\r\nnew_l, new_r = squash(squash_fn, new_l), squash(squash_fn, new_r);\r\n\r\nff = pow(.5, rate*samps/SAMPLERATE);\r\nnew_l = mix(new_l, last_l, ff);\r\nnew_r = mix(new_r, last_r, ff);\r\n\t\r\npoke(buf_l, new_l, update_samp, update_chan);\r\npoke(buf_r, new_r, update_samp, update_chan);\r\n\r\n\r\n//read from wavetable\r\ninterp_phase = update_samp/samps;\r\nret_l, ret_r = 0, 0;\r\nfor(i=0; i<oversample; i+=1){\r\n\twave_phase_l = wrap(wave_phase_l + freq_l/(oversample*SAMPLERATE), 0, 1);\r\n\twave_phase_r = wrap(wave_phase_r + freq_r/(oversample*SAMPLERATE), 0, 1);\r\n\tnew_l, old_l = peek(buf_l, wave_phase_l, newer_chan, channels = 2, channelmode=\"wrap\", boundmode=\"wrap\", interp = \"spline\", index=\"phase\");\r\n\tnew_r, old_r = peek(buf_r, wave_phase_r, newer_chan, channels = 2, channelmode=\"wrap\", boundmode=\"wrap\", interp = \"spline\", index=\"phase\");\r\n\tret_l += mix(old_l, new_l, interp_phase);\r\n\tret_r += mix(old_r, new_r, interp_phase);\r\n}\r\nret_l/=oversample;\r\nret_r/=oversample;\r\n\r\n//out1, out2 = ret_l, ret_r;\r\nout1, out2 = dcblock(ret_l), dcblock(ret_r);",
					"fontface" : 0,
					"fontname" : "Arial",
					"fontsize" : 12.0,
					"id" : "obj-5",
					"maxclass" : "codebox",
					"numinlets" : 5,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 3.0, 31.0, 788.0, 581.0 ],
					"style" : ""
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 3.0, 3.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 195.25, 3.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 3.0, 616.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 1 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 2 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-5", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-8", 0 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-5", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 3 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-6", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 4 ],
					"disabled" : 0,
					"hidden" : 0,
					"source" : [ "obj-7", 0 ]
				}

			}
 ]
	}

}
